parameters:
  name: 'Conda build job'
  vmImage: 'Ubuntu-18.04'
  py_maj: '3'
  py_min: '6'
  location: 'conda'
  conda_bld: '3.16.3'

jobs:
- job: ${{ parameters.name }}
  timeoutInMinutes: 360
  
  pool:
    vmImage: ${{ parameters.vmImage }}
    
  steps: 
  
  # update submodules
  - bash: |
      git submodule init
      git submodule update
    displayName: git init and supdate submodules
  #activate conda
  - ${{ if or(contains(parameters.vmImage, 'macOS'),contains(parameters.vmImage, 'Ubuntu')) }}:
    - bash: echo "##vso[task.prependpath]$CONDA/bin"
      displayName: 'Add conda to PATH'
  - ${{ if contains(parameters.vmImage, 'win') }}:
    - powershell: Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
      displayName: 'Add conda to PATH'

  # Ubuntu install opengl items
  - ${{ if contains(parameters.vmImage, 'Ubuntu') }}:
    - bash: |
        sudo apt-get update && \
        sudo apt-get -q -y install libglu1-mesa-dev libgl1-mesa-dev
      displayName: 'Install OpenGL headers'

  # macOS ownership workaround and fix osx sdk
  - ${{ if contains(parameters.vmImage, 'macOS') }}:
    - bash: |
        sudo chown -R $USER $CONDA && \
        curl -o MacOSX10.9.sdk.tar.xz -L https://github.com/phracker/MacOSX-SDKs/releases/download/10.13/MacOSX10.9.sdk.tar.xz && \
        tar xf MacOSX10.9.sdk.tar.xz && \
        sudo mv -v MacOSX10.9.sdk /opt/ && \
        ls /opt
      displayName: 'MacOS ownership workaround and installation of MacOSX10.9 sdk'
 
  - bash: |
        conda config --set always_yes yes --set changeps1 no && \
        conda update -q conda && \
        conda info -a && \
        conda config --add channels https://conda.anaconda.org/conda-forge
    displayName: 'Conda config and info'

  - bash: conda create --yes --quiet --name build_env conda-build=${{ parameters.conda_bld }} conda-verify libarchive python=${{ parameters.py_maj }}.${{ parameters.py_min }} anaconda-client
    displayName: Create Anaconda environment
    
  - bash: |
      source activate build_env && \
      conda config --set anaconda_upload yes && \
      conda build --no-remove-work-dir --token $TOKEN --user tpaviot -c tpaviot ${{ parameters.location }}
    displayName: 'Run conda build'
    failOnStderr: false
    env:
      PYTHONBUFFERED: 1
      PYTHON_VERSION: ${{ parameters.py_maj }}.${{ parameters.py_min }}
      PACKAGE_VERSION: $(Build.SourceBranchName)
      TOKEN: $(anaconda.TOKEN)